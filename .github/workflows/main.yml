on:
  push:
    tags: [ "*.*.*" ]

permissions:
  contents: write

jobs:
#  build-linux:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Install pnpm
#        uses: pnpm/action-setup@v4
#        with:
#          version: 10
#          run_install: false
#
#      - name: Install Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 22
#          cache: 'pnpm'
#
#      - name: Install just
#        uses: extractions/setup-just@v3
#        with:
#          just-version: 1.40.0
#
#      - name: Install dependencies
#        run: just install
#
#      - name: Run tests
#        run: just test
#
#      - name: Run linter
#        run: just lint
#
#      - name: Build application
#        run: just build
#        env:
#          FORGE_APP_VERSION: ${{ github.ref_name }}
#
##      - run: mkdir -p out/make/deb/x64
##      - run: echo "TEST" > out/make/deb/x64/erpel_${{ github.ref_name }}_amd64.deb
#
#      - name: Upload build
#        uses: actions/upload-artifact@v4
#        with:
#          name: build-${{ runner.os }}
#          path: out/make/**/*
#          retention-days: 1
#
#  build-windows:
#    runs-on: windows-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Install pnpm
#        uses: pnpm/action-setup@v4
#        with:
#          version: 10
#          run_install: false
#
#      - name: Install Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: 22
#          cache: 'pnpm'
#
#      - name: Install just
#        uses: extractions/setup-just@v3
#        with:
#          just-version: 1.40.0
#
#      - name: Install dependencies
#        run: just install
#
#      - name: Run tests
#        run: just test
#
#      - name: Run linter
#        run: just lint
#
#      # fixes https://github.com/electron/forge/issues/3047
#      - name: Append version to package.json
#        run: |
#          $json = Get-Content $Env:JSON_FILE | Out-String | ConvertFrom-Json
#          $json | Add-Member -Type NoteProperty -Name 'version' -Value $Env:FORGE_APP_VERSION
#          $json | ConvertTo-Json | Set-Content $Env:JSON_FILE
#        env:
#          FORGE_APP_VERSION: ${{ github.ref_name }}
#          JSON_FILE: package.json
#
#      - name: Build application
#        run: just build
#        env:
#          FORGE_APP_VERSION: ${{ github.ref_name }}
#
##      - run: New-Item -ItemType Directory "./out/make/squirrel.windows/x64/"
##      - run: New-Item -ItemType File "./out/make/squirrel.windows/x64/erpel-${{ github.ref_name }}-full.nupkg" -Value "erpel-${{ github.ref_name }}-full.nupkg"
##      - run: New-Item -ItemType File "./out/make/squirrel.windows/x64/erpel-${{ github.ref_name }} Setup.exe" -Value "erpel-${{ github.ref_name }} Setup.exe"
##      - run: New-Item -ItemType File "./out/make/squirrel.windows/x64/RELEASES" -Value "RELEASES"
#
#      - name: Upload build
#        uses: actions/upload-artifact@v4
#        with:
#          name: build-${{ runner.os }}
#          path: out/make/**/*
#          retention-days: 1

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install just
        uses: extractions/setup-just@v3
        with:
          just-version: 1.40.0

      - name: Install dependencies
        run: just install

      - name: Run tests
        run: just test

      - name: Run linter
        run: just lint

      - name: Build application
        run: just build
        env:
          FORGE_APP_VERSION: ${{ github.ref_name }}

      - name: Upload build
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}
          path: out/make/**/*
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs:
#      - build-linux
#      - build-windows
      - build-macos
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download builds
        uses: actions/download-artifact@v4
        with:
          pattern: build-*
          path: ./builds
          merge-multiple: "true"

      - run: ls -lah builds/*
      - run: ls -lah builds/*/*
      - run: ls -lah builds/*/*/*

      - name: Tag release
        run: gh release create ${{ github.ref_name }} ./builds/*/*/*
        env:
          GH_TOKEN: ${{ github.token }}
